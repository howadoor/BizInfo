//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BizInfo.Model.Entities", "TagInfo", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BizInfo.Model.Entities.Tag), "Info", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizInfo.Model.Entities.Info), true)]
[assembly: EdmRelationshipAttribute("BizInfo.Model.Entities", "OperationKindTagInfo", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BizInfo.Model.Entities.Tag), "Info", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizInfo.Model.Entities.Info), true)]
[assembly: EdmRelationshipAttribute("BizInfo.Model.Entities", "VerbTagInfo", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BizInfo.Model.Entities.Tag), "Info", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizInfo.Model.Entities.Info), true)]
[assembly: EdmRelationshipAttribute("BizInfo.Model.Entities", "DomainTagInfo", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BizInfo.Model.Entities.Tag), "Info", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizInfo.Model.Entities.Info), true)]
[assembly: EdmRelationshipAttribute("BizInfo.Model.Entities", "UserAndInfoInfo", "UserAndInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizInfo.Model.Entities.UserAndInfo), "Info", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizInfo.Model.Entities.Info), true)]
[assembly: EdmRelationshipAttribute("BizInfo.Model.Entities", "FK_WatchSearchCriteria", "SearchCriteria", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizInfo.Model.Entities.SearchCriteria), "WatchSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizInfo.Model.Entities.Watch), true)]
[assembly: EdmRelationshipAttribute("BizInfo.Model.Entities", "FK_WatchTenant", "TenantSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizInfo.Model.Entities.Tenant), "WatchSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizInfo.Model.Entities.Watch), true)]

#endregion

namespace BizInfo.Model.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BizInfoModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BizInfoModelContainer object using the connection string found in the 'BizInfoModelContainer' section of the application configuration file.
        /// </summary>
        public BizInfoModelContainer() : base("name=BizInfoModelContainer", "BizInfoModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BizInfoModelContainer object.
        /// </summary>
        public BizInfoModelContainer(string connectionString) : base(connectionString, "BizInfoModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BizInfoModelContainer object.
        /// </summary>
        public BizInfoModelContainer(EntityConnection connection) : base(connection, "BizInfoModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DownloadedBlob> DownloadedBlobSet
        {
            get
            {
                if ((_DownloadedBlobSet == null))
                {
                    _DownloadedBlobSet = base.CreateObjectSet<DownloadedBlob>("DownloadedBlobSet");
                }
                return _DownloadedBlobSet;
            }
        }
        private ObjectSet<DownloadedBlob> _DownloadedBlobSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebSource> WebSourceSet
        {
            get
            {
                if ((_WebSourceSet == null))
                {
                    _WebSourceSet = base.CreateObjectSet<WebSource>("WebSourceSet");
                }
                return _WebSourceSet;
            }
        }
        private ObjectSet<WebSource> _WebSourceSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Info> InfoSet
        {
            get
            {
                if ((_InfoSet == null))
                {
                    _InfoSet = base.CreateObjectSet<Info>("InfoSet");
                }
                return _InfoSet;
            }
        }
        private ObjectSet<Info> _InfoSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> CategorySet
        {
            get
            {
                if ((_CategorySet == null))
                {
                    _CategorySet = base.CreateObjectSet<Category>("CategorySet");
                }
                return _CategorySet;
            }
        }
        private ObjectSet<Category> _CategorySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> TagSet
        {
            get
            {
                if ((_TagSet == null))
                {
                    _TagSet = base.CreateObjectSet<Tag>("TagSet");
                }
                return _TagSet;
            }
        }
        private ObjectSet<Tag> _TagSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScoutRun> ScoutRunSet
        {
            get
            {
                if ((_ScoutRunSet == null))
                {
                    _ScoutRunSet = base.CreateObjectSet<ScoutRun>("ScoutRunSet");
                }
                return _ScoutRunSet;
            }
        }
        private ObjectSet<ScoutRun> _ScoutRunSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAndInfo> UserAndInfoSet
        {
            get
            {
                if ((_UserAndInfoSet == null))
                {
                    _UserAndInfoSet = base.CreateObjectSet<UserAndInfo>("UserAndInfoSet");
                }
                return _UserAndInfoSet;
            }
        }
        private ObjectSet<UserAndInfo> _UserAndInfoSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OccurencySet> OccurencySet
        {
            get
            {
                if ((_OccurencySet == null))
                {
                    _OccurencySet = base.CreateObjectSet<OccurencySet>("OccurencySet");
                }
                return _OccurencySet;
            }
        }
        private ObjectSet<OccurencySet> _OccurencySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduledReload> ScheduledReloadSet
        {
            get
            {
                if ((_ScheduledReloadSet == null))
                {
                    _ScheduledReloadSet = base.CreateObjectSet<ScheduledReload>("ScheduledReloadSet");
                }
                return _ScheduledReloadSet;
            }
        }
        private ObjectSet<ScheduledReload> _ScheduledReloadSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SentMessages> SentMessagesSet
        {
            get
            {
                if ((_SentMessagesSet == null))
                {
                    _SentMessagesSet = base.CreateObjectSet<SentMessages>("SentMessagesSet");
                }
                return _SentMessagesSet;
            }
        }
        private ObjectSet<SentMessages> _SentMessagesSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchCriteria> SearchCriteriaSet
        {
            get
            {
                if ((_SearchCriteriaSet == null))
                {
                    _SearchCriteriaSet = base.CreateObjectSet<SearchCriteria>("SearchCriteriaSet");
                }
                return _SearchCriteriaSet;
            }
        }
        private ObjectSet<SearchCriteria> _SearchCriteriaSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchingLog> SearchingLogSet
        {
            get
            {
                if ((_SearchingLogSet == null))
                {
                    _SearchingLogSet = base.CreateObjectSet<SearchingLog>("SearchingLogSet");
                }
                return _SearchingLogSet;
            }
        }
        private ObjectSet<SearchingLog> _SearchingLogSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tenant> TenantSet
        {
            get
            {
                if ((_TenantSet == null))
                {
                    _TenantSet = base.CreateObjectSet<Tenant>("TenantSet");
                }
                return _TenantSet;
            }
        }
        private ObjectSet<Tenant> _TenantSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Watch> WatchSet
        {
            get
            {
                if ((_WatchSet == null))
                {
                    _WatchSet = base.CreateObjectSet<Watch>("WatchSet");
                }
                return _WatchSet;
            }
        }
        private ObjectSet<Watch> _WatchSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DownloadedBlobSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDownloadedBlobSet(DownloadedBlob downloadedBlob)
        {
            base.AddObject("DownloadedBlobSet", downloadedBlob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebSourceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebSourceSet(WebSource webSource)
        {
            base.AddObject("WebSourceSet", webSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfoSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfoSet(Info info)
        {
            base.AddObject("InfoSet", info);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategorySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategorySet(Category category)
        {
            base.AddObject("CategorySet", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TagSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTagSet(Tag tag)
        {
            base.AddObject("TagSet", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScoutRunSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScoutRunSet(ScoutRun scoutRun)
        {
            base.AddObject("ScoutRunSet", scoutRun);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAndInfoSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAndInfoSet(UserAndInfo userAndInfo)
        {
            base.AddObject("UserAndInfoSet", userAndInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OccurencySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOccurencySet(OccurencySet occurencySet)
        {
            base.AddObject("OccurencySet", occurencySet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScheduledReloadSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScheduledReloadSet(ScheduledReload scheduledReload)
        {
            base.AddObject("ScheduledReloadSet", scheduledReload);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SentMessagesSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSentMessagesSet(SentMessages sentMessages)
        {
            base.AddObject("SentMessagesSet", sentMessages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchCriteriaSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchCriteriaSet(SearchCriteria searchCriteria)
        {
            base.AddObject("SearchCriteriaSet", searchCriteria);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchingLogSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchingLogSet(SearchingLog searchingLog)
        {
            base.AddObject("SearchingLogSet", searchingLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TenantSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenantSet(Tenant tenant)
        {
            base.AddObject("TenantSet", tenant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WatchSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWatchSet(Watch watch)
        {
            base.AddObject("WatchSet", watch);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parent
        {
            get
            {
                return _Parent;
            }
            set
            {
                OnParentChanging(value);
                ReportPropertyChanging("Parent");
                _Parent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent");
                OnParentChanged();
            }
        }
        private Nullable<global::System.Int32> _Parent;
        partial void OnParentChanging(Nullable<global::System.Int32> value);
        partial void OnParentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="DownloadedBlob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DownloadedBlob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DownloadedBlob object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sourceUrl">Initial value of the SourceUrl property.</param>
        /// <param name="downloadDate">Initial value of the DownloadDate property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        public static DownloadedBlob CreateDownloadedBlob(global::System.Int64 id, global::System.String sourceUrl, global::System.DateTime downloadDate, global::System.String extension)
        {
            DownloadedBlob downloadedBlob = new DownloadedBlob();
            downloadedBlob.Id = id;
            downloadedBlob.SourceUrl = sourceUrl;
            downloadedBlob.DownloadDate = downloadDate;
            downloadedBlob.Extension = extension;
            return downloadedBlob;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceUrl
        {
            get
            {
                return _SourceUrl;
            }
            set
            {
                OnSourceUrlChanging(value);
                ReportPropertyChanging("SourceUrl");
                _SourceUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceUrl");
                OnSourceUrlChanged();
            }
        }
        private global::System.String _SourceUrl;
        partial void OnSourceUrlChanging(global::System.String value);
        partial void OnSourceUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DownloadDate
        {
            get
            {
                return _DownloadDate;
            }
            set
            {
                OnDownloadDateChanging(value);
                ReportPropertyChanging("DownloadDate");
                _DownloadDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownloadDate");
                OnDownloadDateChanged();
            }
        }
        private global::System.DateTime _DownloadDate;
        partial void OnDownloadDateChanging(global::System.DateTime value);
        partial void OnDownloadDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="Info")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Info : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Info object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="summary">Initial value of the Summary property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="creationTime">Initial value of the CreationTime property.</param>
        /// <param name="isCompanyScore">Initial value of the IsCompanyScore property.</param>
        /// <param name="hasContact">Initial value of the HasContact property.</param>
        /// <param name="contentHash">Initial value of the ContentHash property.</param>
        public static Info CreateInfo(global::System.Int64 id, global::System.String summary, global::System.String text, global::System.DateTime creationTime, global::System.Single isCompanyScore, global::System.Boolean hasContact, global::System.Guid contentHash)
        {
            Info info = new Info();
            info.Id = id;
            info.Summary = summary;
            info.Text = text;
            info.CreationTime = creationTime;
            info.IsCompanyScore = isCompanyScore;
            info.HasContact = hasContact;
            info.ContentHash = contentHash;
            return info;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> WebSourceId
        {
            get
            {
                return _WebSourceId;
            }
            set
            {
                OnWebSourceIdChanging(value);
                ReportPropertyChanging("WebSourceId");
                _WebSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WebSourceId");
                OnWebSourceIdChanged();
            }
        }
        private Nullable<global::System.Int64> _WebSourceId;
        partial void OnWebSourceIdChanging(Nullable<global::System.Int64> value);
        partial void OnWebSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private global::System.DateTime _CreationTime;
        partial void OnCreationTimeChanging(global::System.DateTime value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NativeCategory
        {
            get
            {
                return _NativeCategory;
            }
            set
            {
                OnNativeCategoryChanging(value);
                ReportPropertyChanging("NativeCategory");
                _NativeCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NativeCategory");
                OnNativeCategoryChanged();
            }
        }
        private Nullable<global::System.Int32> _NativeCategory;
        partial void OnNativeCategoryChanging(Nullable<global::System.Int32> value);
        partial void OnNativeCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoUrls
        {
            get
            {
                return _PhotoUrls;
            }
            set
            {
                OnPhotoUrlsChanging(value);
                ReportPropertyChanging("PhotoUrls");
                _PhotoUrls = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoUrls");
                OnPhotoUrlsChanged();
            }
        }
        private global::System.String _PhotoUrls;
        partial void OnPhotoUrlsChanging(global::System.String value);
        partial void OnPhotoUrlsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceTagId
        {
            get
            {
                return _SourceTagId;
            }
            set
            {
                OnSourceTagIdChanging(value);
                ReportPropertyChanging("SourceTagId");
                _SourceTagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceTagId");
                OnSourceTagIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceTagId;
        partial void OnSourceTagIdChanging(Nullable<global::System.Int32> value);
        partial void OnSourceTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VerbKindTagId
        {
            get
            {
                return _VerbKindTagId;
            }
            set
            {
                OnVerbKindTagIdChanging(value);
                ReportPropertyChanging("VerbKindTagId");
                _VerbKindTagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VerbKindTagId");
                OnVerbKindTagIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VerbKindTagId;
        partial void OnVerbKindTagIdChanging(Nullable<global::System.Int32> value);
        partial void OnVerbKindTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VerbTagId
        {
            get
            {
                return _VerbTagId;
            }
            set
            {
                OnVerbTagIdChanging(value);
                ReportPropertyChanging("VerbTagId");
                _VerbTagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VerbTagId");
                OnVerbTagIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VerbTagId;
        partial void OnVerbTagIdChanging(Nullable<global::System.Int32> value);
        partial void OnVerbTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DomainTagId
        {
            get
            {
                return _DomainTagId;
            }
            set
            {
                OnDomainTagIdChanging(value);
                ReportPropertyChanging("DomainTagId");
                _DomainTagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DomainTagId");
                OnDomainTagIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DomainTagId;
        partial void OnDomainTagIdChanging(Nullable<global::System.Int32> value);
        partial void OnDomainTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StructuredContent
        {
            get
            {
                return _StructuredContent;
            }
            set
            {
                OnStructuredContentChanging(value);
                ReportPropertyChanging("StructuredContent");
                _StructuredContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StructuredContent");
                OnStructuredContentChanged();
            }
        }
        private global::System.String _StructuredContent;
        partial void OnStructuredContentChanging(global::System.String value);
        partial void OnStructuredContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single IsCompanyScore
        {
            get
            {
                return _IsCompanyScore;
            }
            set
            {
                OnIsCompanyScoreChanging(value);
                ReportPropertyChanging("IsCompanyScore");
                _IsCompanyScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompanyScore");
                OnIsCompanyScoreChanged();
            }
        }
        private global::System.Single _IsCompanyScore;
        partial void OnIsCompanyScoreChanging(global::System.Single value);
        partial void OnIsCompanyScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasContact
        {
            get
            {
                return _HasContact;
            }
            set
            {
                OnHasContactChanging(value);
                ReportPropertyChanging("HasContact");
                _HasContact = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasContact");
                OnHasContactChanged();
            }
        }
        private global::System.Boolean _HasContact;
        partial void OnHasContactChanging(global::System.Boolean value);
        partial void OnHasContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContentHash
        {
            get
            {
                return _ContentHash;
            }
            set
            {
                OnContentHashChanging(value);
                ReportPropertyChanging("ContentHash");
                _ContentHash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentHash");
                OnContentHashChanged();
            }
        }
        private global::System.Guid _ContentHash;
        partial void OnContentHashChanging(global::System.Guid value);
        partial void OnContentHashChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BizInfo.Model.Entities", "TagInfo", "Tag")]
        public Tag SourceTag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.TagInfo", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.TagInfo", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> SourceTagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.TagInfo", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("BizInfo.Model.Entities.TagInfo", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BizInfo.Model.Entities", "OperationKindTagInfo", "Tag")]
        public Tag VerbKindTag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.OperationKindTagInfo", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.OperationKindTagInfo", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> VerbKindTagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.OperationKindTagInfo", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("BizInfo.Model.Entities.OperationKindTagInfo", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BizInfo.Model.Entities", "VerbTagInfo", "Tag")]
        public Tag VerbTag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.VerbTagInfo", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.VerbTagInfo", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> VerbTagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.VerbTagInfo", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("BizInfo.Model.Entities.VerbTagInfo", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BizInfo.Model.Entities", "DomainTagInfo", "Tag")]
        public Tag DomainTag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.DomainTagInfo", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.DomainTagInfo", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> DomainTagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("BizInfo.Model.Entities.DomainTagInfo", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("BizInfo.Model.Entities.DomainTagInfo", "Tag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="OccurencySet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OccurencySet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OccurencySet object.
        /// </summary>
        /// <param name="count">Initial value of the Count property.</param>
        /// <param name="fragment">Initial value of the Fragment property.</param>
        public static OccurencySet CreateOccurencySet(global::System.Int32 count, global::System.String fragment)
        {
            OccurencySet occurencySet = new OccurencySet();
            occurencySet.Count = count;
            occurencySet.Fragment = fragment;
            return occurencySet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fragment
        {
            get
            {
                return _Fragment;
            }
            set
            {
                if (_Fragment != value)
                {
                    OnFragmentChanging(value);
                    ReportPropertyChanging("Fragment");
                    _Fragment = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Fragment");
                    OnFragmentChanged();
                }
            }
        }
        private global::System.String _Fragment;
        partial void OnFragmentChanging(global::System.String value);
        partial void OnFragmentChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="ScoutRun")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScoutRun : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScoutRun object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="scoutId">Initial value of the ScoutId property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="acceptedCount">Initial value of the AcceptedCount property.</param>
        /// <param name="notAcceptedCount">Initial value of the NotAcceptedCount property.</param>
        public static ScoutRun CreateScoutRun(global::System.Int32 id, global::System.String scoutId, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Int32 acceptedCount, global::System.Int32 notAcceptedCount)
        {
            ScoutRun scoutRun = new ScoutRun();
            scoutRun.Id = id;
            scoutRun.ScoutId = scoutId;
            scoutRun.StartTime = startTime;
            scoutRun.EndTime = endTime;
            scoutRun.AcceptedCount = acceptedCount;
            scoutRun.NotAcceptedCount = notAcceptedCount;
            return scoutRun;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScoutId
        {
            get
            {
                return _ScoutId;
            }
            set
            {
                OnScoutIdChanging(value);
                ReportPropertyChanging("ScoutId");
                _ScoutId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScoutId");
                OnScoutIdChanged();
            }
        }
        private global::System.String _ScoutId;
        partial void OnScoutIdChanging(global::System.String value);
        partial void OnScoutIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastAcceptedUrl
        {
            get
            {
                return _LastAcceptedUrl;
            }
            set
            {
                OnLastAcceptedUrlChanging(value);
                ReportPropertyChanging("LastAcceptedUrl");
                _LastAcceptedUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastAcceptedUrl");
                OnLastAcceptedUrlChanged();
            }
        }
        private global::System.String _LastAcceptedUrl;
        partial void OnLastAcceptedUrlChanging(global::System.String value);
        partial void OnLastAcceptedUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastNotAcceptedUrl
        {
            get
            {
                return _LastNotAcceptedUrl;
            }
            set
            {
                OnLastNotAcceptedUrlChanging(value);
                ReportPropertyChanging("LastNotAcceptedUrl");
                _LastNotAcceptedUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastNotAcceptedUrl");
                OnLastNotAcceptedUrlChanged();
            }
        }
        private global::System.String _LastNotAcceptedUrl;
        partial void OnLastNotAcceptedUrlChanging(global::System.String value);
        partial void OnLastNotAcceptedUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AcceptedCount
        {
            get
            {
                return _AcceptedCount;
            }
            set
            {
                OnAcceptedCountChanging(value);
                ReportPropertyChanging("AcceptedCount");
                _AcceptedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedCount");
                OnAcceptedCountChanged();
            }
        }
        private global::System.Int32 _AcceptedCount;
        partial void OnAcceptedCountChanging(global::System.Int32 value);
        partial void OnAcceptedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotAcceptedCount
        {
            get
            {
                return _NotAcceptedCount;
            }
            set
            {
                OnNotAcceptedCountChanging(value);
                ReportPropertyChanging("NotAcceptedCount");
                _NotAcceptedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotAcceptedCount");
                OnNotAcceptedCountChanged();
            }
        }
        private global::System.Int32 _NotAcceptedCount;
        partial void OnNotAcceptedCountChanging(global::System.Int32 value);
        partial void OnNotAcceptedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="SearchCriteria")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchCriteria : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchCriteria object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastUsedTime">Initial value of the LastUsedTime property.</param>
        /// <param name="usageCount">Initial value of the UsageCount property.</param>
        /// <param name="hash">Initial value of the Hash property.</param>
        public static SearchCriteria CreateSearchCriteria(global::System.Int64 id, global::System.DateTime lastUsedTime, global::System.Int32 usageCount, global::System.Guid hash)
        {
            SearchCriteria searchCriteria = new SearchCriteria();
            searchCriteria.Id = id;
            searchCriteria.LastUsedTime = lastUsedTime;
            searchCriteria.UsageCount = usageCount;
            searchCriteria.Hash = hash;
            return searchCriteria;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Criteria
        {
            get
            {
                return _Criteria;
            }
            set
            {
                OnCriteriaChanging(value);
                ReportPropertyChanging("Criteria");
                _Criteria = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Criteria");
                OnCriteriaChanged();
            }
        }
        private global::System.String _Criteria;
        partial void OnCriteriaChanging(global::System.String value);
        partial void OnCriteriaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUsedTime
        {
            get
            {
                return _LastUsedTime;
            }
            set
            {
                OnLastUsedTimeChanging(value);
                ReportPropertyChanging("LastUsedTime");
                _LastUsedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUsedTime");
                OnLastUsedTimeChanged();
            }
        }
        private global::System.DateTime _LastUsedTime;
        partial void OnLastUsedTimeChanging(global::System.DateTime value);
        partial void OnLastUsedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsageCount
        {
            get
            {
                return _UsageCount;
            }
            set
            {
                OnUsageCountChanging(value);
                ReportPropertyChanging("UsageCount");
                _UsageCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsageCount");
                OnUsageCountChanged();
            }
        }
        private global::System.Int32 _UsageCount;
        partial void OnUsageCountChanging(global::System.Int32 value);
        partial void OnUsageCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Hash
        {
            get
            {
                return _Hash;
            }
            set
            {
                OnHashChanging(value);
                ReportPropertyChanging("Hash");
                _Hash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hash");
                OnHashChanged();
            }
        }
        private global::System.Guid _Hash;
        partial void OnHashChanging(global::System.Guid value);
        partial void OnHashChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BizInfo.Model.Entities", "FK_WatchSearchCriteria", "WatchSet")]
        public EntityCollection<Watch> WatchSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Watch>("BizInfo.Model.Entities.FK_WatchSearchCriteria", "WatchSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Watch>("BizInfo.Model.Entities.FK_WatchSearchCriteria", "WatchSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="SearchingLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchingLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchingLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="searchCriteriaId">Initial value of the SearchCriteriaId property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="resultsCount">Initial value of the ResultsCount property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="succeeded">Initial value of the Succeeded property.</param>
        public static SearchingLog CreateSearchingLog(global::System.Int64 id, global::System.Int64 searchCriteriaId, global::System.DateTime start, global::System.Int32 resultsCount, global::System.Guid userId, global::System.TimeSpan duration, global::System.Boolean succeeded)
        {
            SearchingLog searchingLog = new SearchingLog();
            searchingLog.Id = id;
            searchingLog.SearchCriteriaId = searchCriteriaId;
            searchingLog.Start = start;
            searchingLog.ResultsCount = resultsCount;
            searchingLog.UserId = userId;
            searchingLog.Duration = duration;
            searchingLog.Succeeded = succeeded;
            return searchingLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SearchCriteriaId
        {
            get
            {
                return _SearchCriteriaId;
            }
            set
            {
                OnSearchCriteriaIdChanging(value);
                ReportPropertyChanging("SearchCriteriaId");
                _SearchCriteriaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchCriteriaId");
                OnSearchCriteriaIdChanged();
            }
        }
        private global::System.Int64 _SearchCriteriaId;
        partial void OnSearchCriteriaIdChanging(global::System.Int64 value);
        partial void OnSearchCriteriaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultsCount
        {
            get
            {
                return _ResultsCount;
            }
            set
            {
                OnResultsCountChanging(value);
                ReportPropertyChanging("ResultsCount");
                _ResultsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultsCount");
                OnResultsCountChanged();
            }
        }
        private global::System.Int32 _ResultsCount;
        partial void OnResultsCountChanging(global::System.Int32 value);
        partial void OnResultsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.TimeSpan _Duration;
        partial void OnDurationChanging(global::System.TimeSpan value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Succeeded
        {
            get
            {
                return _Succeeded;
            }
            set
            {
                OnSucceededChanging(value);
                ReportPropertyChanging("Succeeded");
                _Succeeded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Succeeded");
                OnSucceededChanged();
            }
        }
        private global::System.Boolean _Succeeded;
        partial void OnSucceededChanging(global::System.Boolean value);
        partial void OnSucceededChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="SentMessages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SentMessages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SentMessages object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sendTime">Initial value of the SendTime property.</param>
        /// <param name="mail">Initial value of the Mail property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="containedInfoCount">Initial value of the ContainedInfoCount property.</param>
        public static SentMessages CreateSentMessages(global::System.Int64 id, global::System.DateTime sendTime, global::System.String mail, global::System.Int64 userId, global::System.Int32 containedInfoCount)
        {
            SentMessages sentMessages = new SentMessages();
            sentMessages.Id = id;
            sentMessages.SendTime = sendTime;
            sentMessages.Mail = mail;
            sentMessages.UserId = userId;
            sentMessages.ContainedInfoCount = containedInfoCount;
            return sentMessages;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SendTime
        {
            get
            {
                return _SendTime;
            }
            set
            {
                OnSendTimeChanging(value);
                ReportPropertyChanging("SendTime");
                _SendTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendTime");
                OnSendTimeChanged();
            }
        }
        private global::System.DateTime _SendTime;
        partial void OnSendTimeChanging(global::System.DateTime value);
        partial void OnSendTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContainedInfoCount
        {
            get
            {
                return _ContainedInfoCount;
            }
            set
            {
                OnContainedInfoCountChanging(value);
                ReportPropertyChanging("ContainedInfoCount");
                _ContainedInfoCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContainedInfoCount");
                OnContainedInfoCountChanged();
            }
        }
        private global::System.Int32 _ContainedInfoCount;
        partial void OnContainedInfoCountChanging(global::System.Int32 value);
        partial void OnContainedInfoCountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="ScheduledReload")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduledReload : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduledReload object.
        /// </summary>
        /// <param name="infoId">Initial value of the InfoId property.</param>
        /// <param name="scheduledTime">Initial value of the ScheduledTime property.</param>
        public static ScheduledReload CreateScheduledReload(global::System.Int64 infoId, global::System.DateTime scheduledTime)
        {
            ScheduledReload scheduledReload = new ScheduledReload();
            scheduledReload.InfoId = infoId;
            scheduledReload.ScheduledTime = scheduledTime;
            return scheduledReload;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InfoId
        {
            get
            {
                return _InfoId;
            }
            set
            {
                if (_InfoId != value)
                {
                    OnInfoIdChanging(value);
                    ReportPropertyChanging("InfoId");
                    _InfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfoId");
                    OnInfoIdChanged();
                }
            }
        }
        private global::System.Int64 _InfoId;
        partial void OnInfoIdChanging(global::System.Int64 value);
        partial void OnInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ScheduledTime
        {
            get
            {
                return _ScheduledTime;
            }
            set
            {
                OnScheduledTimeChanging(value);
                ReportPropertyChanging("ScheduledTime");
                _ScheduledTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduledTime");
                OnScheduledTimeChanged();
            }
        }
        private global::System.DateTime _ScheduledTime;
        partial void OnScheduledTimeChanging(global::System.DateTime value);
        partial void OnScheduledTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.String name)
        {
            Tag tag = new Tag();
            tag.Id = id;
            tag.Name = name;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="Tenant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tenant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tenant object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mail">Initial value of the Mail property.</param>
        /// <param name="lastInfoSentId">Initial value of the LastInfoSentId property.</param>
        /// <param name="isListOfInfoSendingEnabled">Initial value of the IsListOfInfoSendingEnabled property.</param>
        /// <param name="minimumIntervalOfMailInMinutes">Initial value of the MinimumIntervalOfMailInMinutes property.</param>
        /// <param name="lastMailSentTime">Initial value of the LastMailSentTime property.</param>
        /// <param name="uuid">Initial value of the Uuid property.</param>
        public static Tenant CreateTenant(global::System.Int64 id, global::System.String mail, global::System.Int64 lastInfoSentId, global::System.Boolean isListOfInfoSendingEnabled, global::System.Int32 minimumIntervalOfMailInMinutes, global::System.DateTime lastMailSentTime, global::System.Guid uuid)
        {
            Tenant tenant = new Tenant();
            tenant.Id = id;
            tenant.Mail = mail;
            tenant.LastInfoSentId = lastInfoSentId;
            tenant.IsListOfInfoSendingEnabled = isListOfInfoSendingEnabled;
            tenant.MinimumIntervalOfMailInMinutes = minimumIntervalOfMailInMinutes;
            tenant.LastMailSentTime = lastMailSentTime;
            tenant.Uuid = uuid;
            return tenant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastUsedSearchCriteria
        {
            get
            {
                return _LastUsedSearchCriteria;
            }
            set
            {
                OnLastUsedSearchCriteriaChanging(value);
                ReportPropertyChanging("LastUsedSearchCriteria");
                _LastUsedSearchCriteria = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUsedSearchCriteria");
                OnLastUsedSearchCriteriaChanged();
            }
        }
        private global::System.String _LastUsedSearchCriteria;
        partial void OnLastUsedSearchCriteriaChanging(global::System.String value);
        partial void OnLastUsedSearchCriteriaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LastInfoSentId
        {
            get
            {
                return _LastInfoSentId;
            }
            set
            {
                OnLastInfoSentIdChanging(value);
                ReportPropertyChanging("LastInfoSentId");
                _LastInfoSentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastInfoSentId");
                OnLastInfoSentIdChanged();
            }
        }
        private global::System.Int64 _LastInfoSentId;
        partial void OnLastInfoSentIdChanging(global::System.Int64 value);
        partial void OnLastInfoSentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsListOfInfoSendingEnabled
        {
            get
            {
                return _IsListOfInfoSendingEnabled;
            }
            set
            {
                OnIsListOfInfoSendingEnabledChanging(value);
                ReportPropertyChanging("IsListOfInfoSendingEnabled");
                _IsListOfInfoSendingEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsListOfInfoSendingEnabled");
                OnIsListOfInfoSendingEnabledChanged();
            }
        }
        private global::System.Boolean _IsListOfInfoSendingEnabled;
        partial void OnIsListOfInfoSendingEnabledChanging(global::System.Boolean value);
        partial void OnIsListOfInfoSendingEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinimumIntervalOfMailInMinutes
        {
            get
            {
                return _MinimumIntervalOfMailInMinutes;
            }
            set
            {
                OnMinimumIntervalOfMailInMinutesChanging(value);
                ReportPropertyChanging("MinimumIntervalOfMailInMinutes");
                _MinimumIntervalOfMailInMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumIntervalOfMailInMinutes");
                OnMinimumIntervalOfMailInMinutesChanged();
            }
        }
        private global::System.Int32 _MinimumIntervalOfMailInMinutes;
        partial void OnMinimumIntervalOfMailInMinutesChanging(global::System.Int32 value);
        partial void OnMinimumIntervalOfMailInMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastMailSentTime
        {
            get
            {
                return _LastMailSentTime;
            }
            set
            {
                OnLastMailSentTimeChanging(value);
                ReportPropertyChanging("LastMailSentTime");
                _LastMailSentTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastMailSentTime");
                OnLastMailSentTimeChanged();
            }
        }
        private global::System.DateTime _LastMailSentTime;
        partial void OnLastMailSentTimeChanging(global::System.DateTime value);
        partial void OnLastMailSentTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uuid
        {
            get
            {
                return _Uuid;
            }
            set
            {
                OnUuidChanging(value);
                ReportPropertyChanging("Uuid");
                _Uuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Uuid");
                OnUuidChanged();
            }
        }
        private global::System.Guid _Uuid;
        partial void OnUuidChanging(global::System.Guid value);
        partial void OnUuidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BizInfo.Model.Entities", "FK_WatchTenant", "WatchSet")]
        public EntityCollection<Watch> WatchSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Watch>("BizInfo.Model.Entities.FK_WatchTenant", "WatchSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Watch>("BizInfo.Model.Entities.FK_WatchTenant", "WatchSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="UserAndInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAndInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAndInfo object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="infoId">Initial value of the InfoId property.</param>
        /// <param name="isImportant">Initial value of the IsImportant property.</param>
        /// <param name="isSourceOfInfoCompany">Initial value of the IsSourceOfInfoCompany property.</param>
        public static UserAndInfo CreateUserAndInfo(global::System.Guid userId, global::System.Int64 infoId, global::System.Boolean isImportant, global::System.Int32 isSourceOfInfoCompany)
        {
            UserAndInfo userAndInfo = new UserAndInfo();
            userAndInfo.UserId = userId;
            userAndInfo.InfoId = infoId;
            userAndInfo.IsImportant = isImportant;
            userAndInfo.IsSourceOfInfoCompany = isSourceOfInfoCompany;
            return userAndInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InfoId
        {
            get
            {
                return _InfoId;
            }
            set
            {
                if (_InfoId != value)
                {
                    OnInfoIdChanging(value);
                    ReportPropertyChanging("InfoId");
                    _InfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfoId");
                    OnInfoIdChanged();
                }
            }
        }
        private global::System.Int64 _InfoId;
        partial void OnInfoIdChanging(global::System.Int64 value);
        partial void OnInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsImportant
        {
            get
            {
                return _IsImportant;
            }
            set
            {
                OnIsImportantChanging(value);
                ReportPropertyChanging("IsImportant");
                _IsImportant = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsImportant");
                OnIsImportantChanged();
            }
        }
        private global::System.Boolean _IsImportant;
        partial void OnIsImportantChanging(global::System.Boolean value);
        partial void OnIsImportantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IsSourceOfInfoCompany
        {
            get
            {
                return _IsSourceOfInfoCompany;
            }
            set
            {
                OnIsSourceOfInfoCompanyChanging(value);
                ReportPropertyChanging("IsSourceOfInfoCompany");
                _IsSourceOfInfoCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSourceOfInfoCompany");
                OnIsSourceOfInfoCompanyChanged();
            }
        }
        private global::System.Int32 _IsSourceOfInfoCompany;
        partial void OnIsSourceOfInfoCompanyChanging(global::System.Int32 value);
        partial void OnIsSourceOfInfoCompanyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BizInfo.Model.Entities", "UserAndInfoInfo", "Info")]
        public Info Info
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Info>("BizInfo.Model.Entities.UserAndInfoInfo", "Info").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Info>("BizInfo.Model.Entities.UserAndInfoInfo", "Info").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Info> InfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Info>("BizInfo.Model.Entities.UserAndInfoInfo", "Info");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Info>("BizInfo.Model.Entities.UserAndInfoInfo", "Info", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="Watch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Watch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Watch object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="tenantId">Initial value of the TenantId property.</param>
        /// <param name="searchCriteriaId">Initial value of the SearchCriteriaId property.</param>
        public static Watch CreateWatch(global::System.Int64 id, global::System.Boolean isActive, global::System.String name, global::System.Int64 tenantId, global::System.Int64 searchCriteriaId)
        {
            Watch watch = new Watch();
            watch.Id = id;
            watch.IsActive = isActive;
            watch.Name = name;
            watch.TenantId = tenantId;
            watch.SearchCriteriaId = searchCriteriaId;
            return watch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TenantId
        {
            get
            {
                return _TenantId;
            }
            set
            {
                OnTenantIdChanging(value);
                ReportPropertyChanging("TenantId");
                _TenantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TenantId");
                OnTenantIdChanged();
            }
        }
        private global::System.Int64 _TenantId;
        partial void OnTenantIdChanging(global::System.Int64 value);
        partial void OnTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SearchCriteriaId
        {
            get
            {
                return _SearchCriteriaId;
            }
            set
            {
                OnSearchCriteriaIdChanging(value);
                ReportPropertyChanging("SearchCriteriaId");
                _SearchCriteriaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchCriteriaId");
                OnSearchCriteriaIdChanged();
            }
        }
        private global::System.Int64 _SearchCriteriaId;
        partial void OnSearchCriteriaIdChanging(global::System.Int64 value);
        partial void OnSearchCriteriaIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BizInfo.Model.Entities", "FK_WatchSearchCriteria", "SearchCriteria")]
        public SearchCriteria SearchCriteria
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchCriteria>("BizInfo.Model.Entities.FK_WatchSearchCriteria", "SearchCriteria").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchCriteria>("BizInfo.Model.Entities.FK_WatchSearchCriteria", "SearchCriteria").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SearchCriteria> SearchCriteriaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchCriteria>("BizInfo.Model.Entities.FK_WatchSearchCriteria", "SearchCriteria");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SearchCriteria>("BizInfo.Model.Entities.FK_WatchSearchCriteria", "SearchCriteria", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BizInfo.Model.Entities", "FK_WatchTenant", "TenantSet")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("BizInfo.Model.Entities.FK_WatchTenant", "TenantSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("BizInfo.Model.Entities.FK_WatchTenant", "TenantSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("BizInfo.Model.Entities.FK_WatchTenant", "TenantSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("BizInfo.Model.Entities.FK_WatchTenant", "TenantSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BizInfo.Model.Entities", Name="WebSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebSource object.
        /// </summary>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="scouted">Initial value of the Scouted property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="processingResult">Initial value of the ProcessingResult property.</param>
        public static WebSource CreateWebSource(global::System.String url, global::System.DateTime scouted, global::System.Int64 id, global::System.Int32 processingResult)
        {
            WebSource webSource = new WebSource();
            webSource.Url = url;
            webSource.Scouted = scouted;
            webSource.Id = id;
            webSource.ProcessingResult = processingResult;
            return webSource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Scouted
        {
            get
            {
                return _Scouted;
            }
            set
            {
                OnScoutedChanging(value);
                ReportPropertyChanging("Scouted");
                _Scouted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Scouted");
                OnScoutedChanged();
            }
        }
        private global::System.DateTime _Scouted;
        partial void OnScoutedChanging(global::System.DateTime value);
        partial void OnScoutedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Processed
        {
            get
            {
                return _Processed;
            }
            set
            {
                OnProcessedChanging(value);
                ReportPropertyChanging("Processed");
                _Processed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Processed");
                OnProcessedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Processed;
        partial void OnProcessedChanging(Nullable<global::System.DateTime> value);
        partial void OnProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcessingResult
        {
            get
            {
                return _ProcessingResult;
            }
            set
            {
                OnProcessingResultChanging(value);
                ReportPropertyChanging("ProcessingResult");
                _ProcessingResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessingResult");
                OnProcessingResultChanged();
            }
        }
        private global::System.Int32 _ProcessingResult;
        partial void OnProcessingResultChanging(global::System.Int32 value);
        partial void OnProcessingResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Extra
        {
            get
            {
                return _Extra;
            }
            set
            {
                OnExtraChanging(value);
                ReportPropertyChanging("Extra");
                _Extra = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Extra");
                OnExtraChanged();
            }
        }
        private global::System.String _Extra;
        partial void OnExtraChanging(global::System.String value);
        partial void OnExtraChanged();

        #endregion
    
    }

    #endregion
    
}
